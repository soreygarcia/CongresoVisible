//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.PartyViewModelDataSource
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class PartyViewModelDataSource { }
#else

	public class PartyViewModelDataSource : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public PartyViewModelDataSource()
		{
			try
			{
				Uri resourceUri = new Uri("/CongresoVisible.Phone;component/SampleData/PartyViewModelDataSource/PartyViewModelDataSource.xaml", UriKind.RelativeOrAbsolute);
				System.Windows.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private People _People = new People();

		public People People
		{
			get
			{
				return this._People;
			}
		}
	}

	public class PeopleItem : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private Party _Party = new Party();

		public Party Party
		{
			get
			{
				return this._Party;
			}

			set
			{
				if (this._Party != value)
				{
					this._Party = value;
					this.OnPropertyChanged("Party");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private System.Windows.Media.ImageSource _SmallImage = null;

		public System.Windows.Media.ImageSource SmallImage
		{
			get
			{
				return this._SmallImage;
			}

			set
			{
				if (this._SmallImage != value)
				{
					this._SmallImage = value;
					this.OnPropertyChanged("SmallImage");
				}
			}
		}

		private string _CandidateFor = string.Empty;

		public string CandidateFor
		{
			get
			{
				return this._CandidateFor;
			}

			set
			{
				if (this._CandidateFor != value)
				{
					this._CandidateFor = value;
					this.OnPropertyChanged("CandidateFor");
				}
			}
		}
	}

	public class People : System.Collections.ObjectModel.ObservableCollection<PeopleItem>
	{ 
	}

	public class Party : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}
#endif
}
